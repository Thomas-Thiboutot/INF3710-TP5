{"ast":null,"code":"import { Subject, map } from \"rxjs\";\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CommunicationService = /*#__PURE__*/(() => {\n  class CommunicationService {\n    constructor(http) {\n      this.http = http; // À DÉCOMMENTER ET À UTILISER LORSQUE VOTRE COMMUNICATION EST IMPLÉMENTÉE\n      // private readonly BASE_URL: string = \"http://localhost:3000/database\";\n      // public constructor(private readonly http: HttpClient) {}\n\n      this.existingIDs = [];\n      this.medecins_column_name = [];\n      this.medecins_row_data = [];\n      this._listeners = new Subject();\n      this.baseUrl = 'http://localhost:3000';\n    }\n\n    listen() {\n      return this._listeners.asObservable();\n    }\n\n    filter(filterBy) {\n      this._listeners.next(filterBy);\n    } //getMedecins() {\n    //  this.http.get(`${this.baseUrl}/database`).subscribe((medecins: any) => {\n    //    this.medecins_row_data = JSON.parse(JSON.stringify(medecins.rows));\n    //    const fields = JSON.parse(JSON.stringify(medecins.fields));\n    //    this.medecins_column_name = fields.map((obj : any) => obj.name);\n    //    this.existingIDs = this.medecins_row_data.map((medecin_data : Medecin)=> medecin_data.idmedecin);\n    //  });\n    //}\n\n\n    getMedecin() {\n      return this.http.get(`${this.baseUrl}/database`, {\n        observe: 'response',\n        responseType: 'text'\n      }).pipe(map(res => JSON.parse(JSON.stringify(res.idmedecin))));\n    }\n\n  }\n\n  CommunicationService.ɵfac = function CommunicationService_Factory(t) {\n    return new (t || CommunicationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CommunicationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommunicationService,\n    factory: CommunicationService.ɵfac\n  });\n  return CommunicationService;\n})();","map":null,"metadata":{},"sourceType":"module"}